Array.prototype.each=function(t){for(var e=this,r=0;r<e.length;r++)t(e[r])},Array.prototype.map=function(t){for(var e=this,r=[],o=0;o<e.length;o++){var n=e[o],a=t(n);r.push(a)}return r},Array.prototype.sort=function(){var t=this,e=function(t,e,r){var o=t[e];t[e]=t[r],t[r]=o},r=function(t,r,o){for(var n=t[Math.floor((o+r)/2)],a=r,s=o;s>=a;){for(;t[a]<n;)a++;for(;t[s]>n;)s--;s>=a&&(e(t,a,s),a++,s--)}return a},o=function(t,e,n){var a;return t.length>1&&(e="number"!=typeof e?0:e,n="number"!=typeof n?t.length-1:n,a=r(t,e,n),a-1>e&&o(t,e,a-1),n>a&&o(t,a,n)),t};return o(t)},Array.prototype.indexOf=function(t,e){var r=function(t,e){for(var r,o,n=0,a=t.length-1;a>=n;)if(r=Math.floor((n+a)/2,10),o=t[r],e>o)n=r+1;else{if(!(o>e))return r;a=r-1}return-1};return e?r(this,t):r(Array.prototype.sort.call(this),t)},Array.prototype.first=function(t){if(t){for(var e=t==this.length?t-1:t,r=[],o=0;e>o;o++)r.push(this[o]);return r}return this[0]},Array.prototype.last=function(t){if(t){for(var e=(t==this.length?t-1:t,[]),r=this.length-t;r<this.length;r++)e.push(this[r]);return e}return this[this.length-1]},Array.prototype.flatten=function(){for(var t=[],e=function(t){return"[object Array]"===Object.prototype.toString.call(t)},r=function(o){for(var n=0;n<o.length;n++){var a=o[n];e(a)?r(a):t.push(a)}},o=0;o<this.length;o++){var n=this[o];e(n)?r(n):t.push(n)}return t},Array.prototype.clean=function(){for(var t=[],e=0;e<this.length;e++){var r=this[e];r===!1||0===r||""===r||null===r||void 0===r||isNaN(r)||t.push(r)}return t},Array.prototype.exists=function(t){return Array.prototype.indexOf.call(this,t)>-1},Array.prototype.union=function(t){for(var e=this,r=0;r<t.length;r++){var o=t[r];e.exists(o)||e.push(o)}return e},Array.prototype.intersect=function(t){for(var e=[],r=0;r<this.length;r++)for(var o=this[r],n=0;n<t.length;n++){var a=t[n];a===o&&e.push(a)}return e},Array.prototype.atRandom=function(t){var e=function(t,e){return Math.floor(Math.random()*(t-e+1)+e)};if(t){for(var r=[],o=0;t>o;o++)r.push(this[e(0,this.length-1)]);return r}return this[e(0,this.length-1)]};var Extendere={goBack:function(){this.goBackToDepth(-1)},goBackToDepth:function(t){return history?void history.back(t):void console.log("Extendere.js ERROR: The current browser does not support the 'history' object.")},onDomReady:function(t){document.addEventListener("DOMContentLoaded",function(){t()})}},ExtendereMath={E:2.718281828459045,LN2:.6931471805599453,LN10:2.302585092994046,LOG2E:1.4426950408889634,LOG10E:.4342944819032518,PI:3.141592653589793,SQRT1_2:.7071067811865476,SQRT2:1.4142135623730951,abs:function(t){return 0>t?-t:t},staticObject:window.Math||Math,exposeMath:function(){this.staticObject=window.Math||Math,window.math=math=ExtendereMath},round:function(t,e){return e=e?e:2,Number(Math.round(t+"e"+e)+"e-"+e)},toRadians:function(t,e){return this.round(Math.PI/180*t,e)},toDegrees:function(t,e){return this.round(180/Math.PI*t,e)}};ExtendereMath.exposeMath(),Object.prototype.allKeys=function(){return Object.keys(this)},Object.prototype.allValues=function(){for(var t=Object.prototype.allKeys.call(this),e=[],r=0;r<t.length;r++)e.push(this[t[r]]);return e},Object.prototype.mapObject=function(filter){for(var keys=Object.prototype.allKeys.call(this),values=Object.prototype.allValues.call(this),ret="",i=0;i<values.length;i++){var key=keys[i],val=filter(key,values[i]),escape="number"!=typeof val?'"':"";ret+='"'+key+'":'+escape+val+escape+","}return ret=ret.substring(0,ret.length-1),ret=eval("({"+ret+"})")},Object.prototype.extract=function(){for(var t=[],e=Object.prototype.allKeys.call(this),r=Object.prototype.allValues.call(this),o=0;o<e.length;o++){var n=e[o],a=r[o],s=[];s.push(n),s.push(a),t.push(s)}return t},Object.prototype.invert=function(){for(var keys=Object.prototype.allKeys.call(this),values=Object.prototype.allValues.call(this),ret="",i=0;i<values.length;i++){var key=keys[i],val=values[i];ret+=val+':"'+key+'",'}return ret=ret.substring(0,ret.length-1),ret=eval("({"+ret+"})")},Object.prototype.merge=function(secondObject){for(var keysOne=Object.prototype.allKeys.call(this),valuesOne=Object.prototype.allValues.call(this),keysTwo=Object.prototype.allKeys.call(secondObject),valuesTwo=Object.prototype.allValues.call(secondObject),ret="",i=0;i<valuesOne.length;i++){var key=keysOne[i],val=valuesOne[i];keysTwo.exists(key)||(ret+=val+':"'+key+'",')}for(var i=0;i<valuesTwo.length;i++){var key=keysTwo[i],val=valuesTwo[i];ret+=val+':"'+key+'",'}return ret=ret.substring(0,ret.length-1),ret=eval("({"+ret+"})")};